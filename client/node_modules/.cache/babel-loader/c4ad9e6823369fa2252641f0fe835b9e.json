{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/filipsundgren/Projects/Ethereum/dapp/client/src/components/Spreads.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\nconst Spreads = () => {\n  _s();\n\n  useEffect(() => {}, []);\n\n  const getPrices = async () => {\n    var ethPrices;\n    const exchanges = [\"binance\", \"bitfinex\", \"bitstamp\", \"lbank\"];\n\n    try {\n      for (var i = 0; i < exchanges.length; i++) {\n        await axios.get(`https://api.coingecko.com/api/v3/exchanges/${exchanges[i]}/tickers?coin_ids=ethereum`).then(res => {\n          if (res.status !== 200) {\n            return;\n          }\n\n          var inBtc = res.data.tickers.filter(ticker => ticker.target === \"BTC\");\n          ethPrices = { ...ethPrices,\n            inBtc\n          };\n        });\n      }\n    } catch (err) {\n      console.log(\"error: \", err);\n    }\n\n    console.log(ethPrices);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getPrices,\n      children: \"Get prices\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Spreads, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Spreads;\nexport default Spreads;\n\nvar _c;\n\n$RefreshReg$(_c, \"Spreads\");","map":{"version":3,"sources":["/Users/filipsundgren/Projects/Ethereum/dapp/client/src/components/Spreads.js"],"names":["React","useState","useEffect","axios","Spreads","getPrices","ethPrices","exchanges","i","length","get","then","res","status","inBtc","data","tickers","filter","ticker","target","err","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElBF,EAAAA,SAAS,CAAC,MAAM,CACf,CADQ,EACN,EADM,CAAT;;AAIA,QAAMG,SAAS,GAAG,YAAY;AAC1B,QAAIC,SAAJ;AACA,UAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,UAAxB,EAAoC,OAApC,CAAlB;;AACA,QAAI;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,SAAS,CAACE,MAA9B,EAAsCD,CAAC,EAAvC,EAA2C;AACvC,cAAML,KAAK,CAACO,GAAN,CAAW,8CAA6CH,SAAS,CAACC,CAAD,CAAI,4BAArE,EACLG,IADK,CACAC,GAAG,IAAI;AACT,cAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpB;AACH;;AACD,cAAIC,KAAK,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAAT,CAAiBC,MAAjB,CAAwBC,MAAM,IAAIA,MAAM,CAACC,MAAP,KAAkB,KAApD,CAAZ;AACAb,UAAAA,SAAS,GAAG,EAAC,GAAGA,SAAJ;AAAeQ,YAAAA;AAAf,WAAZ;AACH,SAPK,CAAN;AAQH;AACJ,KAXD,CAWE,OAAOM,GAAP,EAAY;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,GAAvB;AACH;;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYhB,SAAZ;AACH,GAlBD;;AAqBA,sBACE;AAAA,2BACE;AAAQ,MAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKH,CAhCD;;GAAMD,O;;KAAAA,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\n\n\nconst Spreads = () => {\n\n    useEffect(() => {\n    }, []);\n\n\n    const getPrices = async () => {\n        var ethPrices;\n        const exchanges = [\"binance\", \"bitfinex\", \"bitstamp\", \"lbank\"];\n        try {\n            for (var i = 0; i < exchanges.length; i++) {\n                await axios.get(`https://api.coingecko.com/api/v3/exchanges/${exchanges[i]}/tickers?coin_ids=ethereum`)\n                .then(res => {\n                    if (res.status !== 200) {\n                        return;\n                    }\n                    var inBtc = res.data.tickers.filter(ticker => ticker.target === \"BTC\");\n                    ethPrices = {...ethPrices, inBtc};\n                })\n            }\n        } catch (err) {\n            console.log(\"error: \", err);\n        }\n        console.log(ethPrices);\n    }\n\n\n    return(\n      <>\n        <button onClick={getPrices}>Get prices</button>\n      </>\n    )\n}\n\nexport default Spreads;\n"]},"metadata":{},"sourceType":"module"}